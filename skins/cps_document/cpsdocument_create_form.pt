<tal:block define="type_name request/type_name;
                   ti here/portal_types/?type_name;
                   validate python: request.has_key('cpsdocument_create_button');
                   res python: ti.renderCreateObjectDetailed(
                     container=here, request=request,
                     validate=validate, mode='create',
                     create_callback='cpsdocument_create',
                     created_callback='cpsdocument_created');
                   global rendered_main python: res[0];
                   rendered_ok python: res[1];
                   global portal_status_message python: validate and (rendered_ok and 'psm_content_created' or 'psm_content_error') or '';
                " />
<metal:block use-macro="here/content_lib/macros/master">
  <metal:block fill-slot="css_slot">
    <style type="text/css"
      tal:content="string:@import url(${base_url}calendar-win2k-1.css);"></style>
    <script type="text/javascript" src="calendar.js"
      tal:attributes="src string:${base_url}calendar.js"></script>

    <script type="text/javascript" src="lang/calendar-en.js"
      tal:define="local cpsmcat/get_selected_language"
      tal:attributes="src string:${base_url}lang/calendar-${local}.js"></script>
    <script type="text/javascript" src="calendar-setup.js"
      tal:attributes="src string:${base_url}calendar-setup.js"></script>
  </metal:block>

  <metal:block fill-slot="header">
    <h1 i18n:translate="">
      Create a document of type
      <span i18n:name="type_name"
        tal:content="request/type_name">Type Name</span>
    </h1>
  </metal:block>

  <metal:block fill-slot="main">
    <div tal:replace="structure rendered_main">
      (doc rendering)
    </div>
  </metal:block>

</metal:block>
